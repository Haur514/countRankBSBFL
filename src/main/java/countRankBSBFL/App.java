/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package countRankBSBFL;

import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.nio.file.Files;

public class App {

    private final String base = "C:/Users/h-yosiok/Lab/aggregateSpecSusp/spectrum/";
    private String mathNum;
    private int bugLineNum;
    private String fileName;
    private String directory;

    /**
     * 使い方： 第一引数： math??? 第二引数： バグを持っている行番号 第三引数： ファイル名
     * 
     * @param args
     */
    public static void main(String[] args) {
        new App().invoke();
    }

    private void invoke() {
        fileInit();
        List<String> faultDataList = readFaultData();
        for (String faultData : faultDataList) {
            String[] seg = faultData.split(" ");
            mathNum = seg[0];
            bugLineNum = Integer.parseInt(seg[1]);
            fileName = seg[2];
            run();
        }

    }

    private void fileInit() {
        FileWriter fw = null;
        PrintWriter out = null;
        try {
            String path = "./sample.txt";
            fw = new FileWriter(path, false);
            out = new PrintWriter(fw);
            out.flush();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (out != null) {
                out.close();
            }
            if (fw != null) {
                try {
                    fw.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    public void run() {
        int rankSBFL;
        int rankBSBFL;
        List<String> text = readTRText("SBFL.txt");
        rankSBFL = check(text);
        text = readTRText("BSBFL.txt");
        rankBSBFL = check(text);
        writeToFile(rankSBFL, rankBSBFL);
    }

    private void writeToFile(int rankSBFL, int rankBSBFL) {
        if (rankSBFL == -1) {
            return;
        }
        FileWriter fw = null;
        PrintWriter out = null;
        try {
            String path = "./sample.txt";
            fw = new FileWriter(path, true);
            out = new PrintWriter(fw);
            out.print('"' + fileName + '"' + ",");
            out.print('"' + Integer.toString(rankSBFL) + '"' + ",");
            out.println('"' + Integer.toString(rankBSBFL) + '"' + ",");
            out.flush();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (out != null) {
                out.close();
            }
            if (fw != null) {
                try {
                    fw.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    private int check(List<String> text) {
        for (int i = 0; i < text.size(); i++) {
            String line = text.get(i);
            String[] segment = line.split(" ");
            int num = Integer.parseInt(segment[0]);
            if (bugLineNum == num) {
                if (segment[1].contains(fileName)) {
                    return i + 1;
                }
            }
        }
        return -1;
    }

    private List<String> readTRText(String fileName) {
        Path file = Paths.get(base + mathNum + "/" + fileName);
        List<String> text;
        try {
            text = Files.readAllLines(file);
        } catch (IOException e) {
            text = null;
            e.printStackTrace();
        }
        if (text.isEmpty()) {
            System.out.println("There is no data in " + base + mathNum + "/" + fileName);
        }
        return text;
    }

    private List<String> readFaultData() {
        Path file = Paths.get("./faultData.txt");
        List<String> text;
        try {
            text = Files.readAllLines(file);
        } catch (IOException e) {
            text = null;
            e.printStackTrace();
        }
        if (text.isEmpty()) {
            System.out.println("There is no data in faultData");
        }
        return text;
    }
}
